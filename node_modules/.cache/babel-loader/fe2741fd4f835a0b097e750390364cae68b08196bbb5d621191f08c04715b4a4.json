{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      packages: [],\n      // Данные из API\n      currentPage: 1,\n      // Текущая страница\n      pageSize: 10,\n      // Размер страницы\n      totalPackages: 0 // Общее количество пакетов (нужно получить из API)\n    };\n  },\n\n  created() {\n    this.fetchPackages();\n  },\n  methods: {\n    async fetchPackages() {\n      try {\n        const response = await axios.get(`https://data.jsdelivr.com/v1/stats/packages`, {\n          params: {\n            limit: this.pageSize,\n            offset: (this.currentPage - 1) * this.pageSize\n          }\n        });\n        this.packages = response.data;\n        console.log(response);\n        this.totalPackages = 100;\n      } catch (error) {\n        console.error('Error fetching packages:', error);\n      }\n    },\n    handleCurrentChange(page) {\n      this.currentPage = page;\n      this.fetchPackages();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","packages","currentPage","pageSize","totalPackages","created","fetchPackages","methods","response","get","params","limit","offset","console","log","error","handleCurrentChange","page"],"sources":["/Users/maksymsenyuk/Desktop/projects/test/src/pages/MainPage.vue"],"sourcesContent":["<template>\n  <div>\n    <el-table :data=\"packages\" border stripe>\n      <el-table-column prop=\"name\" label=\"Package Name\"></el-table-column>\n      <!-- Добавьте другие столбцы, соответствующие вашим данным -->\n    </el-table>\n    <el-pagination\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"currentPage\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n    :page-size=\"pageSize\"\n    :total=\"totalPackages\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      packages: [], // Данные из API\n      currentPage: 1, // Текущая страница\n      pageSize: 10, // Размер страницы\n      totalPackages: 0 // Общее количество пакетов (нужно получить из API)\n    }\n  },\n  created() {\n    this.fetchPackages()\n  },\n  methods: {\n    async fetchPackages() {\n      try {\n        const response = await axios.get(`https://data.jsdelivr.com/v1/stats/packages`, {\n          params: {\n            limit: this.pageSize,\n            offset: (this.currentPage - 1) * this.pageSize\n          }\n        })\n        this.packages = response.data\n        console.log(response)\n        this.totalPackages = 100\n      } catch (error) {\n        console.error('Error fetching packages:', error)\n      }\n    },\n    handleCurrentChange(page) {\n      this.currentPage = page\n      this.fetchPackages()\n    }\n  }\n}\n</script>\n\n<style>\n/* Стилизуйте таблицу и пагинацию по вашему усмотрению */\n</style>\n"],"mappings":"AAiBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,WAAW,EAAE,CAAC;MAAE;MAChBC,QAAQ,EAAE,EAAE;MAAE;MACdC,aAAa,EAAE,EAAE;IACnB;EACF,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAE,6CAA4C,EAAE;UAC9EC,MAAM,EAAE;YACNC,KAAK,EAAE,IAAI,CAACR,QAAQ;YACpBS,MAAM,EAAE,CAAC,IAAI,CAACV,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC;UACxC;QACF,CAAC;QACD,IAAI,CAACF,QAAO,GAAIO,QAAQ,CAACR,IAAG;QAC5Ba,OAAO,CAACC,GAAG,CAACN,QAAQ;QACpB,IAAI,CAACJ,aAAY,GAAI,GAAE;MACzB,EAAE,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK;MACjD;IACF,CAAC;IACDC,mBAAmBA,CAACC,IAAI,EAAE;MACxB,IAAI,CAACf,WAAU,GAAIe,IAAG;MACtB,IAAI,CAACX,aAAa,CAAC;IACrB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}